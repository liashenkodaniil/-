-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public."Property owner"
(
property_owner_id integer NOT NULL,
first_name character varying(50) NOT NULL,
last_name character varying(50) NOT NULL,
data_registration timestamp with time zone NOT NULL,
email character varying(50) NOT NULL,
CONSTRAINT property_owner_id_pk PRIMARY KEY (property_owner_id)
);
CREATE TABLE IF NOT EXISTS public."Users"
(
user_id integer NOT NULL,
first_name character varying(50) NOT NULL,
last_name character varying(50) NOT NULL,
data_registration timestamp with time zone NOT NULL,
email character varying(50) NOT NULL,
CONSTRAINT user_id_pk PRIMARY KEY (user_id)
);
CREATE TABLE IF NOT EXISTS public."Realty"
(
realty_id integer NOT NULL,
property_owner_id integer NOT NULL,
city_name character varying(50) NOT NULL,
street_name character varying(50) NOT NULL,
type_realty character varying(50) NOT NULL,
status_realty character varying(50) NOT NULL,
minimum_rental_period integer NOT NULL,
deposit integer NOT NULL,
permitted_conditions character varying(50) NOT NULL,
price integer NOT NULL,
payment_term character varying(50) NOT NULL,
CONSTRAINT realty_id_pk PRIMARY KEY (realty_id)
);
CREATE TABLE IF NOT EXISTS public."Review"
(
review_id integer NOT NULL,
user_id integer NOT NULL,
realty_id integer NOT NULL,
rating integer NOT NULL,
CONSTRAINT review_id_pk PRIMARY KEY (review_id)
);
CREATE TABLE IF NOT EXISTS public."Booking"
(
booking_id integer NOT NULL,
user_id integer NOT NULL,
realty_id integer NOT NULL,
property_owner_id integer NOT NULL,
data_start timestamp with time zone NOT NULL,
data_end timestamp with time zone NOT NULL,
status_booking character varying(50) NOT NULL,
price_booking integer NOT NULL,
CONSTRAINT booking_id_pk PRIMARY KEY (booking_id)
);
ALTER TABLE IF EXISTS public."Realty"
ADD CONSTRAINT property_owner_fk FOREIGN KEY (property_owner_id)
REFERENCES public."Property owner" (property_owner_id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;

ALTER TABLE IF EXISTS public."Review"
ADD CONSTRAINT user_id_fk FOREIGN KEY (user_id)
REFERENCES public."Users" (user_id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;

ALTER TABLE IF EXISTS public."Review"
ADD CONSTRAINT realty_id_fk FOREIGN KEY (realty_id)
REFERENCES public."Realty" (realty_id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;

ALTER TABLE IF EXISTS public."Booking"
ADD CONSTRAINT user_id_fk FOREIGN KEY (user_id)
REFERENCES public."Users" (user_id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;

ALTER TABLE IF EXISTS public."Booking"
ADD CONSTRAINT realty_id_fk FOREIGN KEY (realty_id)
REFERENCES public."Realty" (realty_id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;

ALTER TABLE IF EXISTS public."Booking"
ADD CONSTRAINT property_owner_id_fk FOREIGN KEY (property_owner_id)

REFERENCES public."Property owner" (property_owner_id) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION
NOT VALID;
END;